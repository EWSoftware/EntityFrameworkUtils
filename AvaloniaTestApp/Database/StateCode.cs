// Code generated by DBML To Entity Framework Converter tool
// https://github.com/EWSoftware/EntityFrameworkUtils

using System.ComponentModel.DataAnnotations;
using CommunityToolkit.Mvvm.ComponentModel;

using EWSoftware.EntityFramework.DataAnnotations;

namespace AvaloniaTestApp.Database
{
    [LoadAllStoredProcedure("spStateCodes")]
    public sealed partial class StateCode : ObservableObject
    {
        // C# 14.0 or later allows us to use partial properties with the ObservableProperty attribute.
        [ObservableProperty]
        public partial string State { get; set; } = String.Empty;

        [ObservableProperty]
        public partial string StateDesc { get; set; } = String.Empty;

        /// <summary>A fake primary key</summary>
        /// <remarks>The <see cref="State"/> is the actual key but it is mutable so we can't use it for
        /// change tracking.  As a hack, we use the last modified time stamp instead.  We also can't use the
        /// insert, update, and delete stored procedure attributes for this entity.</remarks>
        [ObservableProperty, Key, Ignore(true, true)]
        public partial byte[] LastModified { get; set; } = [];

        [ObservableProperty, Ignore(true, true)]
        public partial bool IsInUse { get; set; }

        /// <summary>
        /// Constructor
        /// </summary>
        /// <remarks>This assigns a value to the <see cref="LastModified"/> property to serve as a unique key
        /// for change tracking.</remarks>
        public StateCode()
        {
            this.LastModified = BitConverter.GetBytes(DateTime.Now.Ticks);
        }
    }
}
