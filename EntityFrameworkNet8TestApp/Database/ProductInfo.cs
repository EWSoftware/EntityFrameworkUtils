// Code generated by DBML To Entity Framework Converter tool
// https://github.com/EWSoftware/EntityFrameworkUtils

using System.ComponentModel.DataAnnotations;

using EWSoftware.EntityFramework;
using EWSoftware.EntityFramework.DataAnnotations;

namespace EntityFrameworkNet8TestApp.Database
{
    [LoadByKeyStoredProcedure("spProductInfo"), InsertEntityStoredProcedure("spProductAddUpdate"),
      UpdateEntityStoredProcedure("spProductAddUpdate"), DeleteEntityStoredProcedure("spProductDelete")]
    public sealed class ProductInfo : ChangeTrackingEntity
    {
        [Key]
        public int ProductID
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public string? ProductName
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public string? CategoryName
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public string? CompanyName
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public string? QuantityPerUnit
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public decimal UnitPrice
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public short UnitsInStock
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public short UnitsOnOrder
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public short ReorderLevel
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        public bool Discontinued
        {
            get;
            set => this.SetWithNotify(value, ref field);
        }

        [Ignore(true, true)]
        public byte[] LastModified
        {
            get;
            set => this.SetWithNotify(value, ref field);
        } = [];

    }
}
